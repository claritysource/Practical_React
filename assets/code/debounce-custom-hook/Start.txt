1  import React, {useRef, useState, useEffect} from 'react';
2  import './App.css';
3  
4  const useFetch = (url) =&gt; {
5    const [loading, setLoading] = useState(false)
6    const [error, setError] = useState('')
7    const [items, setItems] = useState([])
8  
9    useEffect(() =&gt; {
10     const fetchItems = async () =&gt; {
11       const response = await fetch(url)
12       const data = await response.json()
13 
14       if (!data.error) {
15         setItems(data.items)
16       }
17       else {
18         setError(data.error)
19       }
20 
21       setLoading(false)
22     }
23 
24     if (url) {
25       setLoading(true)
26       fetchItems()
27     }
28     else {
29       setItems(null)
30     }
31   }, [url])
32 
33   return [loading, items, error]
34 }
35 
36 const Start = React.memo(() =&gt; {
37   const URL = 'https://www.googleapis.com/books/v1/volumes?q='
38   const inputRef = useRef();
39 
40   const [query, setQuery] = useState('')
41   const [loading, items, error] = useFetch(query ? `${URL} + '/' + ${query}` : '')
42 
43   useEffect(() =&gt; {
44     if (inputRef.current) {
45       inputRef.current.focus()
46     }
47   }, [])
48 
49   return (
50     &lt;div&gt;
51       &lt;label htmlFor='query-input'&gt;Search For &lt;/label&gt;
52       &lt;input ref={inputRef} type='text' onChange={e =&gt; setQuery(e.target.value)} id='query-input' /&gt;
53 
54       &lt;div style={{marginTop: '20px'}}&gt;
55         { loading ? &lt;div&gt;Loading...&lt;/div&gt; :
56           error   ? &lt;div&gt;{error.message}&lt;/div&gt; :
57           items   ?
58           &lt;div&gt;
59             {items.map(i =&gt; 
60               &lt;div key={i.id}&gt;{i.volumeInfo.title}&lt;/div&gt;
61             )}
62           &lt;/div&gt; : null
63       }
64       &lt;/div&gt;
65     &lt;/div&gt;
66   )
67 })
68 
69 export default Start;
